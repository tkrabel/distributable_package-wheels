# AppVeyor.com is a Continuous Integration service to build and run tests under
# Windows
# https://ci.appveyor.com/project/sklearn-ci/scikit-learn

environment:
  global:
    BUILD_COMMIT: 0.0.7
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script interpreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C ..\\appveyor\\run_with_env.cmd"
    WHEELHOUSE_UPLOADER_USERNAME: AKIAYWIC4XH4HDVW2IH3
    WHEELHOUSE_UPLOADER_SECRET:
      secure: dUNddm0v6ZH1QcWK5BZJG9U06qap4OV72DQsQkffjsGsnrxXEodqjP4+jcJ8LZ0i

    # Make sure we don't download large datasets when running the test on
    # continuous integration platform
    SKLEARN_SKIP_NETWORK_TESTS: 1
    APPVEYOR_SKIP_FINALIZE_ON_EXIT: true
    # Minimum numpy version
    NP_BUILD_DEP: "1.10.4"
    DAILY_COMMIT: master
    DAILY_BUILD: "false"

  matrix:
    # - PYTHON: "C:\\Python27"
    #   PYTHON_VERSION: "2.7.11"
    #   PYTHON_ARCH: "32"

    # - PYTHON: "C:\\Python27-x64"
    #   PYTHON_VERSION: "2.7.11"
    #   PYTHON_ARCH: "64"

    # - PYTHON: "C:\\Python34"
    #   PYTHON_VERSION: "3.4.5"
    #   PYTHON_ARCH: "32"

    # - PYTHON: "C:\\Python34-x64"
    #   PYTHON_VERSION: "3.4.5"
    #   PYTHON_ARCH: "64"

    # - PYTHON: "C:\\Python35"
    #   PYTHON_VERSION: "3.5.2"
    #   PYTHON_ARCH: "32"

    # - PYTHON: "C:\\Python35-x64"
    #   PYTHON_VERSION: "3.5.2"
    #   PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python36"
      PYTHON_VERSION: "3.6.0"
      PYTHON_ARCH: "32"
      NP_BUILD_DEP: "1.12.1"
      DAILY_BUILD: "true"

    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.0"
      PYTHON_ARCH: "64"
      NP_BUILD_DEP: "1.12.1"
      DAILY_BUILD: "true"

    - PYTHON: "C:\\Python37"
      PYTHON_VERSION: "3.7.0"
      PYTHON_ARCH: "32"
      NP_BUILD_DEP: "1.14.5"
      DAILY_BUILD: "true"

    - PYTHON: "C:\\Python37-x64"
      PYTHON_VERSION: "3.7.0"
      PYTHON_ARCH: "64"
      NP_BUILD_DEP: "1.14.5"
      DAILY_BUILD: "true"

init:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"
  - "ECHO \"%APPVEYOR_SCHEDULED_BUILD%\""
  - ps: >-
      if ($env:APPVEYOR_SCHEDULED_BUILD -eq "True") {
        $env:CONTAINER = "sklearn-nightly"
        if ($env:DAILY_COMMIT) { $env:BUILD_COMMIT = $env:DAILY_COMMIT }
        if ($env:DAILY_BUILD -eq "false") { Exit-AppveyorBuild }
      } else {
        $env:CONTAINER = "wheels"
        $env:UPLOAD_ARGS = "--no-update-index"
      }
install:
  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  - "powershell ./appveyor/install.ps1"
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  - "python -m pip install -U pip"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""
  - "pip --version"

  # Checkout the request scikit-learn version in the submodule
  - "git submodule update --init --recursive"
  - "cd distributable_package"
  - "git checkout %BUILD_COMMIT%"
  - "git clean -fxd"
  - "git reset --hard"

  # Install the build and runtime dependencies of the project.
  - "%CMD_IN_ENV% pip install --timeout=60 numpy==%NP_BUILD_DEP%"
  - "%CMD_IN_ENV% pip install --timeout=60 -r ../appveyor/requirements.txt"
  - "%CMD_IN_ENV% python setup.py bdist_wheel"
  - ps: "ls dist"

  # # Install the generated wheel package to test it
  # - "pip install --pre --no-index --find-links dist/ scikit-learn"

# Not a .NET project, we build scikit-learn in the install step instead
build: false

test_script:
  # # Remove the source dir to make sure we run the tests on the
  # # installed library.
  # - "rd /s /q \"sklearn\""
  # # remove setup.cfg so as to not force --doctest-modules
  # - "del setup.cfg"
  # # Install the newest version of numpy for the tests: the goal is to ensure
  # # that the scikit-learn wheels are binary compatible both with the old numpy
  # # version against which they were built and the newest numpy version at the
  # # time of the release, that is the version of numpy that users are most
  # # likely to use.
  # - "%CMD_IN_ENV% pip install -U --timeout=60 numpy"
  # - "%CMD_IN_ENV% pytest -rs --pyargs sklearn"

artifacts:
  # Archive the generated wheel package in the ci.appveyor.com build report.
  - path: C:\projects\distributable-package-wheels\distributable_package\dist\*

on_success:
  # Upload the generated wheel package to Rackspace
  # On Windows, Apache Libcloud cannot find a standard CA cert bundle so we
  # disable the ssl checks.
  # - python -m wheelhouse_uploader upload
  #   --no-ssl-check
  #   --local-folder=dist
  #   %CONTAINER%
  - python -m wheelhouse_uploader upload --local-folder=dist /edaviz-wheels --provider S3_EU_CENTRAL
  # - python -m wheelhouse_uploader upload --local-folder ${TRAVIS_BUILD_DIR}/wheelhouse/ /edaviz-wheels --provider S3_EU_CENTRAL


cache:
  # Use the appveyor cache to avoid re-downloading large archives such
  # the MKL numpy and scipy wheels mirrored on a rackspace cloud
  # container, speed up the appveyor jobs and reduce bandwidth
  # usage on our rackspace account.
  - '%APPDATA%\pip\Cache'